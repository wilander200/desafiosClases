1-. Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. 
El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 

    -. use ecommerce
    -. db.productos.insertMany([{title: 'martillo', price: 600, thumbnail: 'foto1'},{title: 'sierra', price: 200, thumbnail: 'foto2'},{title: 'destornillador', price: 1600, thumbnail: 'foto3'},{title: 'madera', price: 4900, thumbnail: 'foto4'},{title: 'clavos', price: 3600, thumbnail: 'foto5'},{title: 'pegamento', price: 2600, thumbnail: 'foto6'},{title: 'pintura', price: 4500, thumbnail: 'foto7'},{title: 'diluyente', price: 2350, thumbnail: 'foto8'},{title: 'tornillos', price: 220, thumbnail: 'foto9'},{title: 'gomas', price: 550, thumbnail: 'foto10'}])
    -. db.mensajes.insertMany([{email: 'gilbertocorrea@gmail.com', fyh: '23/5/2022 9:03:19', mensaje: 'mensaje 1'},{email: 'godinmonsalve@gmail.com', fyh: '23/5/2022 9:25:19', mensaje: 'mensaje 2'},{email: 'gilbertocorrea@gmail.com', fyh: '3/6/2022 19:03:19', mensaje: 'mensaje 3'},{email: 'juanpizarro@gmail.com', fyh: '3/6/2022 20:04:19', mensaje: 'mensaje 4'},{email: 'carolinaperez@gmail.com', fyh: '3/6/2022 9:03:19', mensaje: 'mensaje 5'},{email: 'gilbertocorrea@gmail.com', fyh: '3/6/2022 12:15:19', mensaje: 'mensaje 6'},{email: 'pabloperez@gmail.com', fyh: '13/6/2022 9:03:19', mensaje: 'mensaje 7'},{email: 'gilbertocorrea@gmail.com', fyh: '13/6/2022 9:13:19', mensaje: 'mensaje 8'},{email: 'juanalbertodaza@gmail.com', fyh: '4/6/2022 19:03:19', mensaje: 'mensaje 9'},{email: 'gilbertocorrea@gmail.com', fyh: '4/6/2022 20:13:19', mensaje: 'mensaje 10'}])


2-. Definir las claves de los documentos en relación a los campos de las tablas de esa base. 
En el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos
(eligiendo valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990). 



3-. Listar todos los documentos en cada colección.

    -. db.productos.find()
    -. db.mensajes.find()


4-. Mostrar la cantidad de documentos almacenados en cada una de ellas.

    -. db.productos.estimatedDocumentCount()
    -. db.mensajes.estimatedDocumentCount()


5-. Realizar un CRUD sobre la colección de productos:

    a).Agregar un producto más en la colección de productos 

        -. db.productos.insertOne({title: 'Mazo', price: 4320, thumbnail: 'foto11'})
        -. db.mensajes.insertOne({email: 'carolinaperez@gmail.com', fyh: '5/6/2022 19:03:19', mensaje: 'mensaje 11'})

    b).Realizar una consulta por nombre de producto específico:
        i-. Listar los productos con precio menor a 1000 pesos.

            -. db.productos.find({price: {$lt: 1000}})

        ii-.Listar los productos con precio entre los 1000 a 3000 pesos.

            -. db.productos.find({$and: [{price: {$gte: 1000}} , {price: {$lte: 3000}}]})

        iii-.Listar los productos con precio mayor a 3000 pesos.

            -. db.productos.find({price: {$gt: 3000}})

        iv-.Realizar una consulta que traiga sólo el nombre del tercer producto más barato.

            -. db.productos.find().sort({price: 1}).skip(2).limit(1)

    c).Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.

            -. db.productos.updateMany({price: {$ne: 0}}, {$set: {stock: 100}, $setOnInsert: {defaultQty: 100}}, {upsert: true})

    d).Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 

            -. db.productos.updateMany({price: {$gt: 4000}}, {$set: {stock: 0}})

    e).Borrar los productos con precio menor a 1000 pesos

            -. db.productos.deleteMany({price: {$lt: 1000}})

6-. Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.

        -. db.createUser({user:'pepe' , pwd: 'asd456' , roles:[{role: 'read' , db: 'ecommerce'}]})