
const productosGet = async (req , res) => {
    let prod = await productos.getAll()
    logger.info('Se cargaron los productos correctamente')
    res.render('plantilla', {
        producto : prod,
        productoTrue: prod.length})
}

const productosGetId = async (req , res) => {
    const {id} = req.params
    let producto = await productos.getById(id)
    if (producto === undefined) {
        logger.error(`Producto con el ID: ${id} no encontrado`)
        return res.send(JSON.stringify({error:'Producto no encontrado'}))
    }
    logger.info('Se cargo el producto con el id enviado')
    res.render('plantilla', {
        producto : producto,
        productoTrue: producto.length})
}

const productosPost = async (req , res) => {
    let prod = req.body 
    await productos.saveProducto(prod)
    res.redirect('/api/productos')
}

const productosPut = async (req , res) => {
    let prod = req.body
    let {id} = req.params
    let producto = await productos.saveProductoById(id, prod)
    if (producto === undefined) {
        logger.error(`Producto con el ID: ${id} no encontrado`)
        return res.send(JSON.stringify({error:'Producto no encontrado'}))
    }
    res.redirect('/api/productos')
}

const productosDelete = async (req , res) => {
    let {id} = req.params
    const producto = await productos.deleteByIdNumber(id)
    if (producto === undefined) {
        logger.error(`Producto con el ID: ${id} no encontrado`)
        const error = (JSON.stringify({error:'Producto no encontrado'}))
        return res.send(error)
    }
    res.redirect('/api/producto')
}